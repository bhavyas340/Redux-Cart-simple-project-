{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n  }\n});\nconst sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://redux-cart-72773-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n    try {\n      await sendRequest();\n    } catch (error) {}\n    dispatch(uiActions.showNotification({\n      status: 'success',\n      title: 'success!',\n      message: 'Sent cart data successfully!'\n    }));\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["/Users/bhavyadeepsharma/Downloads/01-starting-project-2/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\n\n\nconst cartSlice = createSlice({\n    name:'cart',\n    initialState:{\n        items:[],\n        totalQuantity:0,\n    },\n    reducers:{\n        replaceCart(state, action) {\n            state.totalQuantity = action.payload.totalQuantity;\n            state.items = action.payload.items;\n          },\n        addItemToCart(state, action){\n            const newItem = action.payload;\n            const existingItem = state.items.find((item) => item.id === newItem.id)\n            state.totalQuantity++;\n            if(!existingItem){\n                state.items.push({\n                    id:newItem.id,\n                    price: newItem.price,\n                    quantity:1,\n                    totalPrice:newItem.price,\n                    name: newItem.title\n                });\n            } else{\n                existingItem.quantity++;\n                existingItem.totalPrice = existingItem.totalPrice+ newItem.price\n            }\n        },\n       removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n\n    }\n})\n\nconst sendCartData =  (cart) =>{\n    return async (dispatch)=> {\n        dispatch(\n            uiActions.showNotification({\n            status:'pending',\n            title:'Sending',\n            message:'Sending cart data!',\n          }))\n\n          const sendRequest  =  async ()=>{\n            const response = await fetch('https://redux-cart-72773-default-rtdb.firebaseio.com/cart.json', {\n                method: 'PUT',\n                body: JSON.stringify(cart),\n              });\n          \n              if(!response.ok){\n                throw new Error('Sending cart data failed.')\n              }\n          }\n\n          try{\n            await sendRequest();\n          } catch(error){\n            \n          }\n         \n\n          dispatch(uiActions.showNotification({\n            status:'success',\n            title:'success!',\n            message:'Sent cart data successfully!',\n          })\n        )\n    }\n}\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}